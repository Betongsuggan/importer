
MUST for 2.0.0 release:
==============

- Be consistant in the way metadata fields are named.  Use the term 
  metadata "field" all across.  SEE BELOW: may not be necessary if condition
  is set on all handlers.
  
- Make field regex filtering a lib core feature (the framework
  would check if it passes before invoking the handler).

- Compare files with previous release and update changes.xml accordingly
- Compare files with pervious release and add @since where appropriate

++ DONE: Have the CsvSplitter offer to provide which column has the 
   reference field (for each child docs), and which fields should make up 
   content (if any).
  
++ DONE: Move transformer, tagger, filter, under handler package?

++ DONE: have a RejectionCause returned instead of boolean?

++ DONE: Have embeded docs in tika parser behave similar to a split, returning
   embedded docs as child docs.

++ DONE: Return ImporterOutput instead, which will hold: isRejected, 
   rejectedCause, ImportDocument. This involves building a generic way to 
   report issues as opposed to rely on log4j alone (or instead of?)

++ DONE: Make it possible to bypass parsing for some files (when people want to 
   index raw documents as-is.

++ DONE: Write tmp files in specified temp directory (defaulting to system tmp)

++ DONE: Make an all memory-only options (as opposed to always rely on files
   after each modification).   Best senario would be to always use memory,
   except when too big, then swap.

++ DONE: Add document splitting in multiple docs, with option to keep the parent
   document or not and offer options what the document reference should be
   (default: parentref!childref).

++ DONE: Add CharacterCaseTransformer (upper, lower)

++ Add DebugTagger giving options to print to log the metadata (all or some) 
   and/or the content.

Any release:
==============

- Have "conditional" handler decorators that would act wrapper around other
  handlers, but those will only be invoked when the condition matches.
  That would better than having tons of filter options on every handlers 
  defined.  This is different than usual filters since documents are not
  rejected if they do not meet a condition, they move on to the next handler.


- Add a TextStatisticsTagger (or TextMetricsTagger) that add fields for things
  such as: num of characters, num of words, average word length, average,
  sentence length, average paragraph length, etc.

- Offer ways to force Character Encoding.

